// import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';

// // Define the base query function
// const baseQuery = fetchBaseQuery({
//   baseUrl: 'https://hive.bcp.net.pk/api/v1',
// });

// // Create an API service using createApi
// export const apiService = createApi({
//   reducerPath: 'apiService',
//   baseQuery,
//   endpoints: (builder) => ({
//     fetchData: builder.query({
//       query: (endpoint) => `/${endpoint}`,
//     }),
//     loginUser: builder.mutation({
//       query: ({ username, password }) => ({
//         url: '/login',
//         method: 'POST',
//         body: { username, password },
//       }),
//     }),
//   }),
// });

// // Export hooks generated by the service
// export const { useFetchDataQuery, useLoginUserMutation } = apiService;

// //

// import { configureStore } from '@reduxjs/toolkit';
// import { apiService } from '../services/apiService';
// import { setupListeners } from '@reduxjs/toolkit/query';
// import storage from 'redux-persist/lib/storage';
// import { persistStore, persistReducer } from 'redux-persist';
// import rootReducer from './rootReducer';

// const persistConfig = {
//   key: 'root',
//   storage,
// };

// const persistedReducer = persistReducer(persistConfig, rootReducer);

// const store = configureStore({
//   reducer: {
//     ...persistedReducer,
//     [apiService.reducerPath]: apiService.reducer,
//   },
//   middleware: (getDefaultMiddleware) =>
//     getDefaultMiddleware({
//       serializableCheck: false,
//     }).concat(apiService.middleware),
// });

// setupListeners(store.dispatch);

// const persistor = persistStore(store);

// export { store, persistor };

// //

// import { combineReducers } from '@reduxjs/toolkit';
// // Import other reducers as needed
// import userReducer from './Redux';

// const rootReducer = combineReducers({
//   // Add your other reducers here
//   user: userReducer,
// });

// export default rootReducer;

// //

// import React from 'react';
// import ReactDOM from 'react-dom/client';
// import App from './App.jsx';
// import './index.css';
// import { Provider } from 'react-redux';
// import { PersistGate } from 'redux-persist/integration/react';
// import { ToastContainer } from 'react-toastify';
// import 'react-toastify/dist/ReactToastify.css';
// import { store, persistor } from './store/store';

// ReactDOM.createRoot(document.getElementById('root')).render(
//   <React.StrictMode>
//     <Provider store={store}>
//       <PersistGate loading={null} persistor={persistor}>
//         <App />
//         <ToastContainer />
//       </PersistGate>
//     </Provider>
//   </React.StrictMode>
// );

// //

// import React, { useState } from 'react';
// import { useLoginUserMutation } from '../services/apiService';

// const Login = () => {
//   const [username, setUsername] = useState('');
//   const [password, setPassword] = useState('');
//   const [loginUser, { isLoading, error, data }] = useLoginUserMutation();

//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     try {
//       await loginUser({ username, password }).unwrap();
//     } catch (err) {
//       console.error('Failed to login: ', err);
//     }
//   };

//   return (
//     <div className="login-container">
//       <form onSubmit={handleSubmit}>
//         <div>
//           <label htmlFor="username">Username</label>
//           <input
//             type="text"
//             id="username"
//             value={username}
//             onChange={(e) => setUsername(e.target.value)}
//           />
//         </div>
//         <div>
//           <label htmlFor="password">Password</label>
//           <input
//             type="password"
//             id="password"
//             value={password}
//             onChange={(e) => setPassword(e.target.value)}
//           />
//         </div>
//         <button type="submit" disabled={isLoading}>
//           Login
//         </button>
//       </form>
//       {isLoading && <p>Loading...</p>}
//       {error && <p>Error: {error.message}</p>}
//       {data && <p>Welcome, {data.name}</p>}
//     </div>
//   );
// };

// export default Login;

// //

// import React from 'react';
// import { useFetchDataQuery } from '../services/apiService';

// const FetchData = ({ endpoint }) => {
//   const { data, error, isLoading } = useFetchDataQuery(endpoint);

//   if (isLoading) return <p>Loading...</p>;
//   if (error) return <p>Error: {error.message}</p>;

//   return (
//     <div>
//       <h1>Data</h1>
//       <pre>{JSON.stringify(data, null, 2)}</pre>
//     </div>
//   );
// };

// export default FetchData;

// //

// import React from 'react';
// import Login from './components/Login';
// import FetchData from './components/FetchData';

// const App = () => {
//   return (
//     <div>
//       <h1>My App</h1>
//       <Login />
//       <FetchData endpoint="your-endpoint-here" />
//     </div>
//   );
// };

// export default App;
